'use client';

import { motion, } from "framer-motion";
import Image from 'next/image';
import Link from "next/link";
import { usePathname } from 'next/navigation';
import { useEffect, useRef, useState } from "react";


export default function Header({ transparent = false, forceWhiteLogo = false, whiteText = false }: { transparent?: boolean, forceWhiteLogo?: boolean, whiteText?: boolean }) {
    const [mobileOpen, setMobileOpen] = useState(false);
    const [dropdownOpen, setDropdownOpen] = useState(false);
    const [dropdownHovered, setDropdownHovered] = useState(false);
    const [moreDropdownOpen, setMoreDropdownOpen] = useState(false);
    const [selectedCity, setSelectedCity] = useState("BENGALURU");
    const [dropdownTimeout, setDropdownTimeout] = useState(null);
    const dropdownTimeoutRef = useRef<NodeJS.Timeout | null>(null);

const clearExistingTimeout = () => {
  if (dropdownTimeoutRef.current) {
    clearTimeout(dropdownTimeoutRef.current);
    dropdownTimeoutRef.current = null;
  }
};

    const cities = ["BENGALURU", "CHENNAI", "HYDERABAD"];

    const toggleCity = (city: string) => {
        setSelectedCity(city);
        setDropdownOpen(false);
    };

    const pathname = usePathname();

    const ref = useRef<HTMLDivElement | null>(null);
    const [isStuck, setIsStuck] = useState(false);
  
    useEffect(() => {
      let ticking = false;
  
      const handleScroll = () => {
        if (!ticking) {
          window.requestAnimationFrame(() => {
            const top = ref.current?.getBoundingClientRect().top ?? 1;
  
            // Consider "stuck" when it's at or above the top
            const stuck = top <= 0;
  
            setIsStuck(prev => {
              // Only update if the value has actually changed
              if (prev !== stuck) return stuck;
              return prev;
            });
  
            ticking = false;
          });
          ticking = true;
        }
      };
  
      window.addEventListener('scroll', handleScroll);
      handleScroll(); // Initial check
  
      return () => window.removeEventListener('scroll', handleScroll);
    }, []);
    
    return (
       
        <motion.header 
        ref={ref}
        className={` ${transparent ? 'bg-transparent' : 'bg-white'} p-4 ${mobileOpen ? 'h-[100dvh] mobileHeader !bg-black' : 'h-auto'
        } sm:h-auto transition-all duration-300 sticky top-0 w-screen z-[999]`}
        animate={{ opacity: isStuck ? 1 : 0 }}
        transition={{ duration: 0.4, ease: 'easeOut' }}
      
        >
            
            <div className="max-w-screen-4xl md:px-20 mx-auto flex justify-between items-center">
                {/* Logo + City */}
                <div className="flex flex-col sm:flex-row md:items-baseline sm:items-start gap-1 md:gap-4">
                    <h1 className="text-2xl font-bold tracking-tight flex items-center">
                        {/* Logo SVG */}
                        <Link href="/">
                        {mobileOpen ? (
                             <svg width="143" height="29" viewBox="0 0 143 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M47.0283 7.79297H41.9688V4.51855H47.0283V7.79297ZM86.6162 7.79297H81.5557V4.51855H86.6162V7.79297Z" fill="#F55252"/>
<path d="M38.9971 12.9541H37.1699C35.4388 12.9541 34.135 13.4565 33.2588 14.4609C32.404 15.4654 31.9766 16.8009 31.9766 18.4678V28.2773H27.2637V13.8193H24.8916V9.04297H29.7646V12.7617H31.1104C31.6446 11.4795 32.4679 10.5072 33.5791 9.84473C34.6903 9.18228 35.9618 8.85065 37.3936 8.85059H38.9971V12.9541ZM13.1113 2.17773C14.6714 2.17774 16.0286 2.45511 17.1826 3.01074C18.3366 3.54502 19.2339 4.31491 19.875 5.31934C20.5375 6.30239 20.8691 7.45628 20.8691 8.78125C20.8691 10.1276 20.4951 11.2716 19.7471 12.2119C18.9992 13.1307 18.0375 13.7823 16.8623 14.167V14.2949C17.8238 14.5086 18.6996 14.9045 19.4902 15.4814C20.3023 16.0585 20.9439 16.7849 21.4141 17.6611C21.9056 18.5373 22.1513 19.5738 22.1514 20.7705C22.1514 22.2451 21.7881 23.5381 21.0615 24.6494C20.3563 25.7393 19.3623 26.5941 18.0801 27.2139C16.8192 27.8336 15.3554 28.1435 13.6885 28.1436H0V2.17773H13.1113ZM46.9287 28.1279H42.1523V8.89355H46.9287V28.1279ZM86.4863 28.1279H81.71V8.89355H86.4863V28.1279ZM142.734 28.1123H136.781V23.9453H142.734V28.1123ZM59.5498 14.9092L64.1982 8.85059H69.4561L62.3066 18.2432L69.8408 28.085H64.4873L59.5176 21.5137L54.5176 28.085H49.2275L56.7607 18.2432L49.6123 8.85059H54.9336L59.5498 14.9092ZM124.689 8.06543C126.656 8.06543 128.344 8.45036 129.755 9.21973C131.165 9.96768 132.255 11.0575 133.024 12.4893C133.794 13.8998 134.179 15.5777 134.179 17.5225V19.1895H119.368C119.539 20.8136 120.095 22.0642 121.035 22.9404C121.997 23.7951 123.268 24.2226 124.85 24.2227C126.025 24.2227 126.977 24.0085 127.703 23.5811C128.451 23.1323 128.974 22.4698 129.273 21.5938H134.082C133.633 23.6239 132.597 25.2161 130.973 26.3701C129.37 27.5027 127.339 28.0693 124.882 28.0693C122.809 28.0693 121.013 27.6627 119.496 26.8506C117.979 26.0171 116.804 24.8523 115.971 23.3564C115.159 21.8391 114.752 20.0545 114.752 18.0029C114.752 15.9514 115.159 14.1884 115.971 12.7139C116.783 11.218 117.937 10.0749 119.433 9.28418C120.929 8.47211 122.681 8.06547 124.689 8.06543ZM103.145 8.45801C105.773 8.45801 107.803 9.18462 109.235 10.6377C110.689 12.0909 111.415 14.0255 111.415 16.4404V28.0449H106.639V17.3379C106.639 15.8207 106.233 14.6667 105.421 13.876C104.63 13.0852 103.444 12.6895 101.862 12.6895C100.324 12.6895 99.1372 13.0853 98.3037 13.876C97.4918 14.6667 97.0859 15.8207 97.0859 17.3379V28.0449H92.3096V13.5869H89.9375V8.81055H94.8418V11.8887H96.1885C96.9151 10.7987 97.8449 9.95386 98.9775 9.35547C100.11 8.7572 101.499 8.45803 103.145 8.45801ZM76.9443 27.9277H72.168V1H76.9443V27.9277ZM4.9043 23.9121H12.791C14.2227 23.9121 15.3235 23.6021 16.0928 22.9824C16.862 22.3413 17.2471 21.4223 17.2471 20.2256C17.247 19.0504 16.8619 18.1638 16.0928 17.5654C15.3235 16.9457 14.2335 16.6358 12.8232 16.6357H4.9043V23.9121ZM124.689 11.8809C123.3 11.8809 122.157 12.2333 121.26 12.9385C120.362 13.6436 119.764 14.6478 119.465 15.9512H129.595C129.402 14.6264 128.889 13.6223 128.056 12.9385C127.222 12.2332 126.1 11.8809 124.689 11.8809ZM4.9043 12.7246H12.4385C13.571 12.7245 14.4368 12.4571 15.0352 11.9229C15.6547 11.3673 15.9638 10.5872 15.9639 9.58301C15.9639 8.53607 15.6546 7.74521 15.0352 7.21094C14.4368 6.67672 13.571 6.40924 12.4385 6.40918H4.9043V12.7246Z" fill="white"/>
<path d="M137.874 0.856812H138.793L140.384 4.74272H140.441L142.035 0.856812H142.968V5.85681H142.23V2.23936H142.183L140.703 5.8501H140.105L138.642 2.23601H138.595V5.85681H137.874V0.856812Z" fill="white"/>
<path d="M133.444 1.50446V0.856812H137.317V1.50446H135.76V5.85681H135.008V1.50446H133.444Z" fill="white"/>
</svg>
):
    forceWhiteLogo ? (
        // <div style="display: flex; align-items: center; gap: 20px;">
   <svg width="143" height="29" viewBox="0 0 143 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M47.0283 7.79297H41.9688V4.51855H47.0283V7.79297ZM86.6162 7.79297H81.5557V4.51855H86.6162V7.79297Z" fill="#F55252"/>
<path d="M38.9971 12.9541H37.1699C35.4388 12.9541 34.135 13.4565 33.2588 14.4609C32.404 15.4654 31.9766 16.8009 31.9766 18.4678V28.2773H27.2637V13.8193H24.8916V9.04297H29.7646V12.7617H31.1104C31.6446 11.4795 32.4679 10.5072 33.5791 9.84473C34.6903 9.18228 35.9618 8.85065 37.3936 8.85059H38.9971V12.9541ZM13.1113 2.17773C14.6714 2.17774 16.0286 2.45511 17.1826 3.01074C18.3366 3.54502 19.2339 4.31491 19.875 5.31934C20.5375 6.30239 20.8691 7.45628 20.8691 8.78125C20.8691 10.1276 20.4951 11.2716 19.7471 12.2119C18.9992 13.1307 18.0375 13.7823 16.8623 14.167V14.2949C17.8238 14.5086 18.6996 14.9045 19.4902 15.4814C20.3023 16.0585 20.9439 16.7849 21.4141 17.6611C21.9056 18.5373 22.1513 19.5738 22.1514 20.7705C22.1514 22.2451 21.7881 23.5381 21.0615 24.6494C20.3563 25.7393 19.3623 26.5941 18.0801 27.2139C16.8192 27.8336 15.3554 28.1435 13.6885 28.1436H0V2.17773H13.1113ZM46.9287 28.1279H42.1523V8.89355H46.9287V28.1279ZM86.4863 28.1279H81.71V8.89355H86.4863V28.1279ZM142.734 28.1123H136.781V23.9453H142.734V28.1123ZM59.5498 14.9092L64.1982 8.85059H69.4561L62.3066 18.2432L69.8408 28.085H64.4873L59.5176 21.5137L54.5176 28.085H49.2275L56.7607 18.2432L49.6123 8.85059H54.9336L59.5498 14.9092ZM124.689 8.06543C126.656 8.06543 128.344 8.45036 129.755 9.21973C131.165 9.96768 132.255 11.0575 133.024 12.4893C133.794 13.8998 134.179 15.5777 134.179 17.5225V19.1895H119.368C119.539 20.8136 120.095 22.0642 121.035 22.9404C121.997 23.7951 123.268 24.2226 124.85 24.2227C126.025 24.2227 126.977 24.0085 127.703 23.5811C128.451 23.1323 128.974 22.4698 129.273 21.5938H134.082C133.633 23.6239 132.597 25.2161 130.973 26.3701C129.37 27.5027 127.339 28.0693 124.882 28.0693C122.809 28.0693 121.013 27.6627 119.496 26.8506C117.979 26.0171 116.804 24.8523 115.971 23.3564C115.159 21.8391 114.752 20.0545 114.752 18.0029C114.752 15.9514 115.159 14.1884 115.971 12.7139C116.783 11.218 117.937 10.0749 119.433 9.28418C120.929 8.47211 122.681 8.06547 124.689 8.06543ZM103.145 8.45801C105.773 8.45801 107.803 9.18462 109.235 10.6377C110.689 12.0909 111.415 14.0255 111.415 16.4404V28.0449H106.639V17.3379C106.639 15.8207 106.233 14.6667 105.421 13.876C104.63 13.0852 103.444 12.6895 101.862 12.6895C100.324 12.6895 99.1372 13.0853 98.3037 13.876C97.4918 14.6667 97.0859 15.8207 97.0859 17.3379V28.0449H92.3096V13.5869H89.9375V8.81055H94.8418V11.8887H96.1885C96.9151 10.7987 97.8449 9.95386 98.9775 9.35547C100.11 8.7572 101.499 8.45803 103.145 8.45801ZM76.9443 27.9277H72.168V1H76.9443V27.9277ZM4.9043 23.9121H12.791C14.2227 23.9121 15.3235 23.6021 16.0928 22.9824C16.862 22.3413 17.2471 21.4223 17.2471 20.2256C17.247 19.0504 16.8619 18.1638 16.0928 17.5654C15.3235 16.9457 14.2335 16.6358 12.8232 16.6357H4.9043V23.9121ZM124.689 11.8809C123.3 11.8809 122.157 12.2333 121.26 12.9385C120.362 13.6436 119.764 14.6478 119.465 15.9512H129.595C129.402 14.6264 128.889 13.6223 128.056 12.9385C127.222 12.2332 126.1 11.8809 124.689 11.8809ZM4.9043 12.7246H12.4385C13.571 12.7245 14.4368 12.4571 15.0352 11.9229C15.6547 11.3673 15.9638 10.5872 15.9639 9.58301C15.9639 8.53607 15.6546 7.74521 15.0352 7.21094C14.4368 6.67672 13.571 6.40924 12.4385 6.40918H4.9043V12.7246Z" fill="white"/>
<path d="M137.874 0.856812H138.793L140.384 4.74272H140.441L142.035 0.856812H142.968V5.85681H142.23V2.23936H142.183L140.703 5.8501H140.105L138.642 2.23601H138.595V5.85681H137.874V0.856812Z" fill="white"/>
<path d="M133.444 1.50446V0.856812H137.317V1.50446H135.76V5.85681H135.008V1.50446H133.444Z" fill="white"/>
</svg>

    ) : (
  <svg width="143" height="29" viewBox="0 0 143 29" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M47.0283 7.79297H41.9688V4.51855H47.0283V7.79297ZM86.6162 7.79297H81.5557V4.51855H86.6162V7.79297Z" fill="#F55252"/>
<path d="M38.9971 12.9541H37.1699C35.4388 12.9541 34.135 13.4565 33.2588 14.4609C32.404 15.4654 31.9766 16.8009 31.9766 18.4678V28.2773H27.2637V13.8193H24.8916V9.04297H29.7646V12.7617H31.1104C31.6446 11.4795 32.4679 10.5072 33.5791 9.84473C34.6903 9.18228 35.9618 8.85065 37.3936 8.85059H38.9971V12.9541ZM13.1113 2.17773C14.6714 2.17774 16.0286 2.45511 17.1826 3.01074C18.3366 3.54502 19.2339 4.31491 19.875 5.31934C20.5375 6.30239 20.8691 7.45628 20.8691 8.78125C20.8691 10.1276 20.4951 11.2716 19.7471 12.2119C18.9992 13.1307 18.0375 13.7823 16.8623 14.167V14.2949C17.8238 14.5086 18.6996 14.9045 19.4902 15.4814C20.3023 16.0585 20.9439 16.7849 21.4141 17.6611C21.9056 18.5373 22.1513 19.5738 22.1514 20.7705C22.1514 22.2451 21.7881 23.5381 21.0615 24.6494C20.3563 25.7393 19.3623 26.5941 18.0801 27.2139C16.8192 27.8336 15.3554 28.1435 13.6885 28.1436H0V2.17773H13.1113ZM46.9287 28.1279H42.1523V8.89355H46.9287V28.1279ZM86.4863 28.1279H81.71V8.89355H86.4863V28.1279ZM142.734 28.1123H136.781V23.9453H142.734V28.1123ZM59.5498 14.9092L64.1982 8.85059H69.4561L62.3066 18.2432L69.8408 28.085H64.4873L59.5176 21.5137L54.5176 28.085H49.2275L56.7607 18.2432L49.6123 8.85059H54.9336L59.5498 14.9092ZM124.689 8.06543C126.656 8.06543 128.344 8.45036 129.755 9.21973C131.165 9.96768 132.255 11.0575 133.024 12.4893C133.794 13.8998 134.179 15.5777 134.179 17.5225V19.1895H119.368C119.539 20.8136 120.095 22.0642 121.035 22.9404C121.997 23.7951 123.268 24.2226 124.85 24.2227C126.025 24.2227 126.977 24.0085 127.703 23.5811C128.451 23.1323 128.974 22.4698 129.273 21.5938H134.082C133.633 23.6239 132.597 25.2161 130.973 26.3701C129.37 27.5027 127.339 28.0693 124.882 28.0693C122.809 28.0693 121.013 27.6627 119.496 26.8506C117.979 26.0171 116.804 24.8523 115.971 23.3564C115.159 21.8391 114.752 20.0545 114.752 18.0029C114.752 15.9514 115.159 14.1884 115.971 12.7139C116.783 11.218 117.937 10.0749 119.433 9.28418C120.929 8.47211 122.681 8.06547 124.689 8.06543ZM103.145 8.45801C105.773 8.45801 107.803 9.18462 109.235 10.6377C110.689 12.0909 111.415 14.0255 111.415 16.4404V28.0449H106.639V17.3379C106.639 15.8207 106.233 14.6667 105.421 13.876C104.63 13.0852 103.444 12.6895 101.862 12.6895C100.324 12.6895 99.1372 13.0853 98.3037 13.876C97.4918 14.6667 97.0859 15.8207 97.0859 17.3379V28.0449H92.3096V13.5869H89.9375V8.81055H94.8418V11.8887H96.1885C96.9151 10.7987 97.8449 9.95386 98.9775 9.35547C100.11 8.7572 101.499 8.45803 103.145 8.45801ZM76.9443 27.9277H72.168V1H76.9443V27.9277ZM4.9043 23.9121H12.791C14.2227 23.9121 15.3235 23.6021 16.0928 22.9824C16.862 22.3413 17.2471 21.4223 17.2471 20.2256C17.247 19.0504 16.8619 18.1638 16.0928 17.5654C15.3235 16.9457 14.2335 16.6358 12.8232 16.6357H4.9043V23.9121ZM124.689 11.8809C123.3 11.8809 122.157 12.2333 121.26 12.9385C120.362 13.6436 119.764 14.6478 119.465 15.9512H129.595C129.402 14.6264 128.889 13.6223 128.056 12.9385C127.222 12.2332 126.1 11.8809 124.689 11.8809ZM4.9043 12.7246H12.4385C13.571 12.7245 14.4368 12.4571 15.0352 11.9229C15.6547 11.3673 15.9638 10.5872 15.9639 9.58301C15.9639 8.53607 15.6546 7.74521 15.0352 7.21094C14.4368 6.67672 13.571 6.40924 12.4385 6.40918H4.9043V12.7246Z" fill="black"/>
<path d="M137.874 0.856812H138.793L140.384 4.74272H140.441L142.035 0.856812H142.968V5.85681H142.23V2.23936H142.183L140.703 5.8501H140.105L138.642 2.23601H138.595V5.85681H137.874V0.856812Z" fill="black"/>
<path d="M133.444 1.50446V0.856812H137.317V1.50446H135.76V5.85681H135.008V1.50446H133.444Z" fill="black"/>
</svg>

       
    
)}            
                        </Link>
                    </h1>

                    {/* City Dropdown */}
                    <div className="relative">
                        <button
                            onClick={() => setDropdownOpen(!dropdownOpen)}
                            className="flex items-center gap-1 px-4 py-1 bg-[rgba(245,82,82,0.1)] text-[#F55252] text-xs font-semibold rounded"
                        >
                            {selectedCity}
                            {dropdownOpen ? (
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
                                    <rect width="12" height="12" transform="matrix(-1 0 0 1 12 0.5)" fill="#F55252" />
                                    <rect width="5.2" height="1.2" transform="matrix(-0.707107 -0.707107 -0.707107 0.707107 10.5254 7.7)" fill="white" />
                                    <rect width="5.2" height="1.2" transform="matrix(0.707107 -0.707107 -0.707107 -0.707107 2.323 8.54853)" fill="white" />
                                </svg>
                            ) : (
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
                                    <rect width="12" height="12" transform="matrix(-1 0 0 1 12 0.5)" fill="#F55252" />
                                    <rect width="5.2" height="1.2" transform="matrix(0.707107 0.707107 0.707107 -0.707107 1.7 4.5)" fill="white" />
                                    <rect width="5.2" height="1.2" transform="matrix(-0.707107 0.707107 0.707107 0.707107 9.5 4.5)" fill="white" />
                                </svg>
                            )}
                        </button>

                       {dropdownOpen && (
    <div className="fixed top-22 md:top-14 mt-1 bg-[rgba(245,82,82,0.10)] backdrop-blur-2xl shadow-md w-32 min-w-40 text-left z-[1000]">
        {cities
        .filter(city => city != selectedCity)
        .map((city) => (
            <div
                key={city}
                onClick={() => toggleCity(city)}
                className={`px-3 py-2 text-xs cursor-pointer border-b-1 border-b-[rgba(255,255,255,.2)] flex items-center justify-between ${selectedCity === city ? 'font-bold text-white' : 'text-white'} hover:bg-black hover:text-white`}
            >
                <div className="flex items-center">
                    {city !== "BENGALURU" && (
                        <div className="bg-[#F55252] text-white p-1 mr-2">
                            <span className="text-[10px] whitespace-nowrap">Coming Soon</span>
                        </div>
                    )}
                </div>
                <div>
                    {city}
                </div>
            </div>
        ))}
    </div>
)}
                    </div>
                </div>

                {/* Desktop Navigation */}
                <nav className={`hidden md:flex gap-6  items-center text-sm font-bold ${whiteText ? 'text-white' : 'text-black'} uppercase sticky top-0`}>
                    <Link href="/" className={`flex items-center gap-1 ${pathname === '/' ? 'text-[#F55252]' : ''}`}>
                        {pathname === '/' && (
                            <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )}
                        <span className="inter-tight-font" >HOME</span>
                    </Link>

                    <Link href="/about" className={`flex items-center gap-1 ${pathname === '/about' ? 'text-[#F55252]' : ''}`}>
                        {pathname === '/about' && (
                            <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )}
                        <span className="inter-tight-font">ABOUT US</span>
                    </Link>

                    <Link href="/how-it-works" className={` flex items-center gap-1 ${pathname === '/how-it-works' ? 'text-[#F55252]' : ''}`}>
                        {pathname === '/how-it-works' && (
                            <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )}
                        <span className="inter-tight-font">HOW IT WORKS</span>
                    </Link>

                    <Link href="/cost-estimator" className={`flex items-center gap-1 ${pathname === '/cost-estimator' ? 'text-[#F55252]' : ''}`}>
                        {pathname === '/cost-estimator' && (
                            <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )}
                        <span className="inter-tight-font">COST ESTIMATOR</span>
                    </Link>

<div
  className="relative"
  onMouseEnter={() => {
    clearExistingTimeout();
    setMoreDropdownOpen(true);
  }}
  onMouseLeave={() => {
    // Start timeout only when leaving the main button area
    dropdownTimeoutRef.current = setTimeout(() => {
      setMoreDropdownOpen(false);
    }, 300);
  }}
>
  <button
    onClick={() => setMoreDropdownOpen(!moreDropdownOpen)}
    className={`flex items-center gap-1 ${pathname === '/contact-us' || pathname === '/career'|| pathname === '/join-us-as-professional' || pathname === '/channel-partner' || moreDropdownOpen ? 'text-[#F55252]' : ''}`}
  >
     {(pathname === '/contact-us' || pathname === '/career' || pathname === '/join-us-as-professional' || pathname === '/channel-partner') && (
      <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
    )}

    <span className="inter-tight-font">MORE</span>
    {moreDropdownOpen ?
      <svg xmlns="http://www.w3.org/2000/svg" width="12" height="13" viewBox="0 0 12 13" fill="none">
        <rect width="5.2" height="1.2" transform="matrix(-0.707107 -0.707107 -0.707107 0.707107 10.5254 7.7)" fill="red" />
        <rect width="5.2" height="1.2" transform="matrix(0.707107 -0.707107 -0.707107 -0.707107 2.323 8.54853)" fill="red" />
      </svg>
      : 
      <svg width="12" height="6" viewBox="0 0 12 6" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fillRule="evenodd" clipRule="evenodd" d="M11.506 1.70233L10.0029 0.19928L5.99661 4.2056L1.99036 0.199342L0.487305 1.70239L4.49544 5.71053L5.99667 4.2093L7.49785 5.71047L11.506 1.70233Z" fill={whiteText ? 'white' : 'black'}/>
      </svg>
    }
  </button>

  {moreDropdownOpen && (
    <div
      className="absolute mt-4 right-0 bg-white shadow-md min-w-70 z-[9999] p-3"
      onMouseEnter={clearExistingTimeout}
      onMouseLeave={() => {
        setMoreDropdownOpen(false);
      }}
    >
      <Link 
        href="/contact-us"
        className={`block px-4 py-2 text-sm ${pathname === '/contact-us' ? 'text-[#F55252]' : 'text-black'} hover:bg-[#FEEEEE] hover:text-[#F55252]`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CONTACT US
      </Link>
      <Link
        href="/career"
        className={`block px-4 py-2 text-sm ${pathname === '/career' ? 'text-[#F55252]' : 'text-black'} hover:bg-[#FEEEEE] hover:text-[#F55252]`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        Career
      </Link>
      <Link
        href="/join-us-as-professional"
        className={`flex flex-row gap-2 px-4 py-2 text-sm ${pathname === '/join-us-as-professional' ? 'text-[#F55252]' : 'text-black'} hover:bg-[#FEEEEE] hover:text-[#F55252]`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CONTRACTOR PARTNER
        <svg width="46" height="22" viewBox="0 0 46 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="46" height="22" fill="#F55252"/>
<path d="M6.80371 15.0977C6.38053 15.0977 5.99316 15.0228 5.6416 14.873C5.29329 14.7201 5.0166 14.4922 4.81152 14.1895C4.60645 13.8867 4.50391 13.5124 4.50391 13.0664V12.9541H5.8125V13.0664C5.8125 13.2617 5.85319 13.431 5.93457 13.5742C6.01921 13.7174 6.13639 13.8265 6.28613 13.9014C6.43587 13.9762 6.6084 14.0137 6.80371 14.0137C7.0153 14.0137 7.19434 13.9697 7.34082 13.8818C7.49056 13.7939 7.60286 13.6621 7.67773 13.4863C7.75586 13.3105 7.79492 13.0957 7.79492 12.8418V7.72461H9.09863V12.8418C9.09863 13.3105 9.00423 13.7142 8.81543 14.0527C8.62988 14.388 8.36458 14.6468 8.01953 14.8291C7.67773 15.0081 7.27246 15.0977 6.80371 15.0977ZM13.3223 15.0977C12.6875 15.0977 12.1162 14.9495 11.6084 14.6533C11.1038 14.3571 10.7051 13.9307 10.4121 13.374C10.1224 12.8174 9.97754 12.1484 9.97754 11.3672C9.97754 10.5827 10.1224 9.91211 10.4121 9.35547C10.7051 8.79557 11.1038 8.36751 11.6084 8.07129C12.1162 7.77507 12.6875 7.62695 13.3223 7.62695C13.9603 7.62695 14.5299 7.77507 15.0312 8.07129C15.5326 8.36751 15.9297 8.79557 16.2227 9.35547C16.5156 9.91211 16.6621 10.5827 16.6621 11.3672C16.6621 12.1484 16.5156 12.8174 16.2227 13.374C15.9297 13.9307 15.5326 14.3571 15.0312 14.6533C14.5299 14.9495 13.9603 15.0977 13.3223 15.0977ZM13.3223 13.916C13.7161 13.916 14.0645 13.8184 14.3672 13.623C14.6699 13.4277 14.9076 13.1413 15.0801 12.7637C15.2526 12.3828 15.3389 11.9173 15.3389 11.3672C15.3389 10.8138 15.2526 10.3467 15.0801 9.96582C14.9076 9.58496 14.6699 9.29688 14.3672 9.10156C14.0645 8.90625 13.7161 8.80859 13.3223 8.80859C12.9284 8.80859 12.5785 8.90625 12.2725 9.10156C11.9697 9.29688 11.7321 9.58496 11.5596 9.96582C11.387 10.3467 11.3008 10.8138 11.3008 11.3672C11.3008 11.9173 11.387 12.3828 11.5596 12.7637C11.7321 13.1413 11.9697 13.4277 12.2725 13.623C12.5785 13.8184 12.9284 13.916 13.3223 13.916ZM18.8496 7.72461V15H17.5312V7.72461H18.8496ZM25.8906 7.72461V15H24.709L21.2861 10.0439H21.2227V15H19.9043V7.72461H21.0859L24.5088 12.6807H24.5723V7.72461H25.8906ZM33.6445 7.72461H34.958V12.4756C34.958 12.9964 34.8359 13.4554 34.5918 13.8525C34.3477 14.2464 34.0042 14.5557 33.5615 14.7803C33.1188 15.0016 32.6012 15.1123 32.0088 15.1123C31.4163 15.1123 30.8988 15.0016 30.4561 14.7803C30.0133 14.5557 29.6683 14.2464 29.4209 13.8525C29.1768 13.4554 29.0547 12.9964 29.0547 12.4756V7.72461H30.373V12.3682C30.373 12.6742 30.4398 12.9443 30.5732 13.1787C30.7067 13.4131 30.8955 13.5986 31.1396 13.7354C31.387 13.8688 31.6768 13.9355 32.0088 13.9355C32.3408 13.9355 32.6289 13.8688 32.873 13.7354C33.1172 13.5986 33.306 13.4131 33.4395 13.1787C33.5762 12.9443 33.6445 12.6742 33.6445 12.3682V7.72461ZM38.5859 15.1123C38.0195 15.1123 37.528 15.0244 37.1113 14.8486C36.6947 14.6729 36.3691 14.4173 36.1348 14.082C35.9004 13.7435 35.7734 13.3333 35.7539 12.8516H37.0527C37.0723 13.1055 37.1504 13.3171 37.2871 13.4863C37.4238 13.6523 37.6029 13.7777 37.8242 13.8623C38.0488 13.9469 38.2979 13.9893 38.5713 13.9893C38.8577 13.9893 39.11 13.9453 39.3281 13.8574C39.5462 13.7695 39.7171 13.6475 39.8408 13.4912C39.9645 13.335 40.0264 13.1527 40.0264 12.9443C40.0264 12.7555 39.971 12.6009 39.8604 12.4805C39.7497 12.3568 39.5967 12.2526 39.4014 12.168C39.2061 12.0833 38.9766 12.0085 38.7129 11.9434L37.8877 11.7285C37.2887 11.5755 36.8167 11.3428 36.4717 11.0303C36.1266 10.7145 35.9541 10.2946 35.9541 9.77051C35.9541 9.34082 36.0697 8.96647 36.3008 8.64746C36.5319 8.3252 36.8477 8.07454 37.248 7.89551C37.6517 7.71647 38.1074 7.62695 38.6152 7.62695C39.1328 7.62695 39.5869 7.71647 39.9775 7.89551C40.3682 8.07454 40.6742 8.32194 40.8955 8.6377C41.1169 8.95345 41.2324 9.31641 41.2422 9.72656H39.9678C39.9352 9.41406 39.7969 9.17318 39.5527 9.00391C39.3118 8.83138 38.9945 8.74512 38.6006 8.74512C38.3271 8.74512 38.0911 8.78581 37.8926 8.86719C37.6973 8.94857 37.5475 9.06087 37.4434 9.2041C37.3392 9.34733 37.2871 9.51009 37.2871 9.69238C37.2871 9.89421 37.3473 10.0602 37.4678 10.1904C37.5915 10.3174 37.7477 10.4199 37.9365 10.498C38.1286 10.5762 38.3239 10.6413 38.5225 10.6934L39.2012 10.8643C39.4746 10.9294 39.7383 11.0173 39.9922 11.1279C40.2461 11.2354 40.474 11.3721 40.6758 11.5381C40.8809 11.7008 41.042 11.8994 41.1592 12.1338C41.2796 12.3682 41.3398 12.6432 41.3398 12.959C41.3398 13.3822 41.2308 13.7565 41.0127 14.082C40.7946 14.4043 40.4805 14.6566 40.0703 14.8389C39.6602 15.0212 39.1654 15.1123 38.5859 15.1123Z" fill="white"/>
</svg>
      </Link>
      <Link
        href="/channel-partner"
        className={`flex flex-row gap-2 px-4 py-2 text-sm ${pathname === '/channel-partner' ? 'text-[#F55252]' : 'text-black'} hover:bg-[#FEEEEE] hover:text-[#F55252]`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CHANNEL PARTNER
        <svg width="46" height="22" viewBox="0 0 46 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="46" height="22" fill="#F55252"/>
<path d="M6.80371 15.0977C6.38053 15.0977 5.99316 15.0228 5.6416 14.873C5.29329 14.7201 5.0166 14.4922 4.81152 14.1895C4.60645 13.8867 4.50391 13.5124 4.50391 13.0664V12.9541H5.8125V13.0664C5.8125 13.2617 5.85319 13.431 5.93457 13.5742C6.01921 13.7174 6.13639 13.8265 6.28613 13.9014C6.43587 13.9762 6.6084 14.0137 6.80371 14.0137C7.0153 14.0137 7.19434 13.9697 7.34082 13.8818C7.49056 13.7939 7.60286 13.6621 7.67773 13.4863C7.75586 13.3105 7.79492 13.0957 7.79492 12.8418V7.72461H9.09863V12.8418C9.09863 13.3105 9.00423 13.7142 8.81543 14.0527C8.62988 14.388 8.36458 14.6468 8.01953 14.8291C7.67773 15.0081 7.27246 15.0977 6.80371 15.0977ZM13.3223 15.0977C12.6875 15.0977 12.1162 14.9495 11.6084 14.6533C11.1038 14.3571 10.7051 13.9307 10.4121 13.374C10.1224 12.8174 9.97754 12.1484 9.97754 11.3672C9.97754 10.5827 10.1224 9.91211 10.4121 9.35547C10.7051 8.79557 11.1038 8.36751 11.6084 8.07129C12.1162 7.77507 12.6875 7.62695 13.3223 7.62695C13.9603 7.62695 14.5299 7.77507 15.0312 8.07129C15.5326 8.36751 15.9297 8.79557 16.2227 9.35547C16.5156 9.91211 16.6621 10.5827 16.6621 11.3672C16.6621 12.1484 16.5156 12.8174 16.2227 13.374C15.9297 13.9307 15.5326 14.3571 15.0312 14.6533C14.5299 14.9495 13.9603 15.0977 13.3223 15.0977ZM13.3223 13.916C13.7161 13.916 14.0645 13.8184 14.3672 13.623C14.6699 13.4277 14.9076 13.1413 15.0801 12.7637C15.2526 12.3828 15.3389 11.9173 15.3389 11.3672C15.3389 10.8138 15.2526 10.3467 15.0801 9.96582C14.9076 9.58496 14.6699 9.29688 14.3672 9.10156C14.0645 8.90625 13.7161 8.80859 13.3223 8.80859C12.9284 8.80859 12.5785 8.90625 12.2725 9.10156C11.9697 9.29688 11.7321 9.58496 11.5596 9.96582C11.387 10.3467 11.3008 10.8138 11.3008 11.3672C11.3008 11.9173 11.387 12.3828 11.5596 12.7637C11.7321 13.1413 11.9697 13.4277 12.2725 13.623C12.5785 13.8184 12.9284 13.916 13.3223 13.916ZM18.8496 7.72461V15H17.5312V7.72461H18.8496ZM25.8906 7.72461V15H24.709L21.2861 10.0439H21.2227V15H19.9043V7.72461H21.0859L24.5088 12.6807H24.5723V7.72461H25.8906ZM33.6445 7.72461H34.958V12.4756C34.958 12.9964 34.8359 13.4554 34.5918 13.8525C34.3477 14.2464 34.0042 14.5557 33.5615 14.7803C33.1188 15.0016 32.6012 15.1123 32.0088 15.1123C31.4163 15.1123 30.8988 15.0016 30.4561 14.7803C30.0133 14.5557 29.6683 14.2464 29.4209 13.8525C29.1768 13.4554 29.0547 12.9964 29.0547 12.4756V7.72461H30.373V12.3682C30.373 12.6742 30.4398 12.9443 30.5732 13.1787C30.7067 13.4131 30.8955 13.5986 31.1396 13.7354C31.387 13.8688 31.6768 13.9355 32.0088 13.9355C32.3408 13.9355 32.6289 13.8688 32.873 13.7354C33.1172 13.5986 33.306 13.4131 33.4395 13.1787C33.5762 12.9443 33.6445 12.6742 33.6445 12.3682V7.72461ZM38.5859 15.1123C38.0195 15.1123 37.528 15.0244 37.1113 14.8486C36.6947 14.6729 36.3691 14.4173 36.1348 14.082C35.9004 13.7435 35.7734 13.3333 35.7539 12.8516H37.0527C37.0723 13.1055 37.1504 13.3171 37.2871 13.4863C37.4238 13.6523 37.6029 13.7777 37.8242 13.8623C38.0488 13.9469 38.2979 13.9893 38.5713 13.9893C38.8577 13.9893 39.11 13.9453 39.3281 13.8574C39.5462 13.7695 39.7171 13.6475 39.8408 13.4912C39.9645 13.335 40.0264 13.1527 40.0264 12.9443C40.0264 12.7555 39.971 12.6009 39.8604 12.4805C39.7497 12.3568 39.5967 12.2526 39.4014 12.168C39.2061 12.0833 38.9766 12.0085 38.7129 11.9434L37.8877 11.7285C37.2887 11.5755 36.8167 11.3428 36.4717 11.0303C36.1266 10.7145 35.9541 10.2946 35.9541 9.77051C35.9541 9.34082 36.0697 8.96647 36.3008 8.64746C36.5319 8.3252 36.8477 8.07454 37.248 7.89551C37.6517 7.71647 38.1074 7.62695 38.6152 7.62695C39.1328 7.62695 39.5869 7.71647 39.9775 7.89551C40.3682 8.07454 40.6742 8.32194 40.8955 8.6377C41.1169 8.95345 41.2324 9.31641 41.2422 9.72656H39.9678C39.9352 9.41406 39.7969 9.17318 39.5527 9.00391C39.3118 8.83138 38.9945 8.74512 38.6006 8.74512C38.3271 8.74512 38.0911 8.78581 37.8926 8.86719C37.6973 8.94857 37.5475 9.06087 37.4434 9.2041C37.3392 9.34733 37.2871 9.51009 37.2871 9.69238C37.2871 9.89421 37.3473 10.0602 37.4678 10.1904C37.5915 10.3174 37.7477 10.4199 37.9365 10.498C38.1286 10.5762 38.3239 10.6413 38.5225 10.6934L39.2012 10.8643C39.4746 10.9294 39.7383 11.0173 39.9922 11.1279C40.2461 11.2354 40.474 11.3721 40.6758 11.5381C40.8809 11.7008 41.042 11.8994 41.1592 12.1338C41.2796 12.3682 41.3398 12.6432 41.3398 12.959C41.3398 13.3822 41.2308 13.7565 41.0127 14.082C40.7946 14.4043 40.4805 14.6566 40.0703 14.8389C39.6602 15.0212 39.1654 15.1123 38.5859 15.1123Z" fill="white"/>
</svg>
      </Link>
    </div>
  )}
</div>

                    <Link href="/zero-cost-emi" className={`flex items-center gap-1 text-[#F55252] `}>
                        {pathname === '/zero-cost-emi' && (
                            <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )}
                        <svg width="13" height="18" viewBox="0 0 13 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M13 0.25H3L1 10.25H4.5L0 17.75L11 9.25H7L13 0.25Z" fill="#F55252"/>
</svg>
                        <span className="inter-tight-font">ZERO COST EMI</span>
                        
                    </Link>
                </nav>

                {/* Mobile Menu Toggle */}
                <div className="md:hidden">
                    <button onClick={() => setMobileOpen(!mobileOpen)}>
                        {mobileOpen ? (
                            <svg xmlns="http://www.w3.org/2000/svg" width="45" height="38" viewBox="0 0 45 38" fill="none">
                                <path d="M44.2734 37.4619H0V9.44824L10.5137 0.632812H44.2734V37.4619Z" fill="#F55252" />
                                <path d="M30.3672 12.7539L16.2246 26.8965L14.1035 24.7754L28.2461 10.6328L30.3672 12.7539Z" fill="white" />
                                <path d="M30.4707 24.5264L28.3867 26.6846L14 12.791L16.084 10.6328L30.4707 24.5264Z" fill="white" />
                            </svg>
                        ) : (
                            <svg xmlns="http://www.w3.org/2000/svg" width="45" height="38" viewBox="0 0 45 38" fill="none">
                                <path d="M44.2735 37.1965H0V9.1827L10.5133 0.367188H44.2735V37.1965Z" fill="#F55252" />
                                <path
                                    fillRule="evenodd"
                                    clipRule="evenodd"
                                    d="M13 12H33V15H13V12ZM13 18H33V21H13V18ZM33 24H13V27H33V24Z"
                                    fill="white"
                                />
                            </svg>
                        )}
                    </button>
                </div>

            </div>

            {/* Mobile Nav Menu */}
            {mobileOpen && (
                    <div className="md:hidden p-4 text-lg font-semibold text-white uppercase space-y-4 py-20">
                      {/* <div className={`${pathname === '/home' ? 'flex items-center justify-between gap-1 text-[#F55252]' : " "}`}>
                        HOME
                        {pathname === '/home' && (
                               <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
                        )
                        }
                      </div> */}
        <Link href="/" className={`flex items-center justify-between ${pathname === '/' ? 'text-[#F55252]' : ''}`}>
            HOME
            {pathname === '/' && (
                <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
            )}
        </Link>
                      
        <Link href="/about" className={`flex items-center justify-between ${pathname === '/about' ? 'text-[#F55252]' : ''}`}>
            ABOUT US
            {pathname === '/about' && (
                <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
            )}
        </Link>
        <Link href="/how-it-works" className={`flex items-center justify-between ${pathname === '/how-it-works' ? 'text-[#F55252]' : ''}`}>
            HOW IT WORKS
            {pathname === '/how-it-works' && (
                <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
            )}
        </Link>
        <Link href="/cost-estimator" className={`flex items-center justify-between ${pathname === '/cost-estimator' ? 'text-[#F55252]' : ''}`}>
            COST ESTIMATOR
            {pathname === '/cost-estimator' && (
                <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
            )}
        </Link>
       <div className="relative">
  <button 
    onClick={() => setMoreDropdownOpen(!moreDropdownOpen)}
    className={`flex items-center justify-between w-full ${pathname === '/contact-us' || pathname === '/career'|| pathname === '/join-us-as-professional' || pathname === '/channel-partner' || moreDropdownOpen ? 'text-[#F55252]' : ''}`}
  >
    
    MORE
    <svg width="12" height="6" viewBox="0 0 12 6" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M11.506 1.70233L10.0029 0.19928L5.99661 4.2056L1.99036 0.199342L0.487305 1.70239L4.49544 5.71053L5.99667 4.2093L7.49785 5.71047L11.506 1.70233Z" fill="white"/>
    </svg>
     {/* {(pathname === '/contact-us' || pathname === '/career' || pathname === '/join-us-as-professional' || pathname === '/channel-partner') && (
      <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
    )} */}
  </button>

  {moreDropdownOpen && (
    <div className="pl-4">
      <Link 
        href="/contact-us" 
        className={`block py-2 ${pathname === '/contact-us' ? 'text-[#F55252]' : ''}`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CONTACT US
      </Link>
      <Link
        href="/career" 
        className={`block py-2 ${pathname === '/career' ? 'text-[#F55252]' : ''}`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CAREER 
      </Link>
       <Link
        href="/channel-partner" 
        className={`block py-2 ${pathname === '/channel-partner' ? 'text-[#F55252]' : ''}`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        CHANNEL PARTNER 
      </Link>
       <Link
        href="/join-us-as-professional" 
        className={`block py-2 ${pathname === '/join-us-as-professional' ? 'text-[#F55252]' : ''}`}
        onClick={() => setMoreDropdownOpen(false)}
      >
        JOIN US AS PROFESIONAL
      </Link>
    </div>
  )}
</div>
        <Link href="/zero-cost-emi" className={`flex items-center justify-between ${pathname === '/zero-cost-emi' ? 'text-[#F55252]' : ''}`}>
            ZERO COST EMI
            {pathname === '/zero-cost-emi' && (
                <span className="w-2 h-2 rounded-full bg-red-500 inline-block" />
            )}
        </Link>
                      {/* <span className="flex items-center gap-1 ">
                        <Zap className="w-4 h-4 text-[#F55252] block" />
                        <span className="text-black">
                                      ZERO COST EMI
                                  </span>
                      </span> */}
                      <div className='flex justify-between flex-col pt-10 gap-[18px]'>
                      <h4 className="text-[10px]/[140%] text-white opacity-60 font-semibold sm:mb-3 py-3">FOLLOW US</h4>
                      <div className="flex space-x-4 text-xl">
                        <a href="#">  {/* Twitter */}
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                            <path d="M22 4.82815C22 4.82815 21.3 6.92815 20 8.22815C21.6 18.2281 10.6 25.5281 2 19.8281C4.2 19.9281 6.4 19.2281 8 17.8281C3 16.3281 0.5 10.4281 3 5.82815C5.2 8.42815 8.6 9.92815 12 9.82815C11.1 5.62815 16 3.22815 19 6.02815C20.1 6.02815 22 4.82815 22 4.82815Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                          </svg>
                        </a>
                        <a href="#"> {/* linkedIn */}
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                            <path d="M16 8.82812C17.5913 8.82812 19.1174 9.46027 20.2426 10.5855C21.3679 11.7107 22 13.2368 22 14.8281V21.8281H18V14.8281C18 14.2977 17.7893 13.789 17.4142 13.4139C17.0391 13.0388 16.5304 12.8281 16 12.8281C15.4696 12.8281 14.9609 13.0388 14.5858 13.4139C14.2107 13.789 14 14.2977 14 14.8281V21.8281H10V14.8281C10 13.2368 10.6321 11.7107 11.7574 10.5855C12.8826 9.46027 14.4087 8.82812 16 8.82812Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M6 9.82812H2V21.8281H6V9.82812Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M4 6.82812C5.10457 6.82812 6 5.93269 6 4.82812C6 3.72356 5.10457 2.82812 4 2.82812C2.89543 2.82812 2 3.72356 2 4.82812C2 5.93269 2.89543 6.82812 4 6.82812Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                          </svg> 
                        </a>
                        <a href="#">  {/* facebook */}
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                            <path d="M18 2.82812H15C13.6739 2.82813 12.4021 3.35491 11.4645 4.29259C10.5268 5.23027 10 6.50204 10 7.82812V10.8281H7V14.8281H10V22.8281H14V14.8281H17L18 10.8281H14V7.82812C14 7.56291 14.1054 7.30855 14.2929 7.12102C14.4804 6.93348 14.7348 6.82812 15 6.82812H18V2.82812Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                          </svg>
                        </a>
                        <a href="#"> {/* ig */}
                          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="25" viewBox="0 0 24 25" fill="none">
                            <path d="M17 2.82812H7C4.23858 2.82812 2 5.0667 2 7.82812V17.8281C2 20.5895 4.23858 22.8281 7 22.8281H17C19.7614 22.8281 22 20.5895 22 17.8281V7.82812C22 5.0667 19.7614 2.82812 17 2.82812Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M15.9997 12.1984C16.1231 13.0307 15.981 13.8806 15.5935 14.6274C15.206 15.3742 14.5929 15.9798 13.8413 16.3581C13.0898 16.7364 12.2382 16.868 11.4075 16.7344C10.5768 16.6007 9.80947 16.2085 9.21455 15.6136C8.61962 15.0187 8.22744 14.2513 8.09377 13.4206C7.96011 12.59 8.09177 11.7383 8.47003 10.9868C8.84829 10.2353 9.45389 9.62217 10.2007 9.23467C10.9475 8.84717 11.7975 8.70501 12.6297 8.82843C13.4786 8.95431 14.2646 9.34989 14.8714 9.95673C15.4782 10.5636 15.8738 11.3495 15.9997 12.1984Z" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                            <path d="M17.5 7.32812H17.51" stroke="#F55252" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                          </svg>
                        </a>
                      </div>
                    </div>{/* mobile menu bottom image */}
                    <div> <Image 
                      src="/mobileimage.png" 
                      alt="decorative-shape"
                      height={500}
                      width={500}
                      className="object-cover w-full absolute bottom-0 left-0 z-10 block sm:hidden"
                    />
                    </div>
                    </div>
            )}
        </motion.header>
    );
}